package model;

import com.sun.org.apache.regexp.internal.RE;
import domainapp.basics.exceptions.ConstraintViolationException;
import domainapp.basics.model.meta.DAssoc;
import domainapp.basics.model.meta.DAttr;
import domainapp.basics.model.meta.DOpt;
import domainapp.basics.util.Tuple;
import model.Chainmail;

public abstract class Armors {
    @DAttr(name = "id", type = DAttr.Type.String, mutable = false, id = true, auto = true)
    protected String id;
    @DAttr(name = "name", type = DAttr.Type.String, mutable = true, optional = true, length = 10)
    protected String name;
    @DAttr(name = "strength", type = DAttr.Type.Integer, mutable = false, min = 1, max = 20)
    protected int strength;
    @DAttr(name = "intelligent", type = DAttr.Type.Integer, mutable = false, min = 1, max = 20)
    protected int intelligent;
    @DAttr(name = "dexterity", type = DAttr.Type.Integer, mutable = false, min = 1, max = 20)
    protected int dexterity;
    @DAttr(name = "hero", type = DAttr.Type.Domain, length = 10, optional = true)
    @DAssoc(ascName = "hero-has-armor", role = "armor", ascType = DAssoc.AssocType.One2One, endType = DAssoc.AssocEndType.One,
            associate = @DAssoc.Associate(type = Hero.class, cardMin = 1, cardMax = 1), dependsOn = true)
    protected Hero hero;
    private static int idCounter;



    @DOpt(type = DOpt.Type.AutoAttributeValueSynchroniser)
    public static void updateAutoGeneratedValue(
            DAttr attrib,
            Tuple derivingValue,
            Object minVal,
            Object maxVal) {
        if (minVal != null && maxVal != null) {
            if (attrib.name().equals("id")) {
                int maxIdVal = Integer.parseInt(maxVal.toString().replaceAll("[^\\d.]", ""));
                if (maxIdVal > idCounter)
                    idCounter = maxIdVal;
            }
        }
    }

    public Hero getHero() {
        return hero;
    }

    public void setHero(Hero hero) {
        this.hero = hero;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setStrength(int strength) {
        this.strength = strength;
    }

    public void setIntelligent(int intelligent) {
        this.intelligent = intelligent;
    }

    public void setDexterity(int dexterity) {
        this.dexterity = dexterity;
    }


    protected static String nextId(String id) {
        idCounter++;
        return id + idCounter;

    }

    public Armors(String id, String name, Integer strength, Integer intelligent, Integer dexterity, Hero hero) {
        if (this instanceof Chainmail) {
            this.id = Chainmail.class.getSimpleName() + nextId(id);
        } else if (this instanceof Robe){
            this.id = Robe.class.getSimpleName()+nextId(id);
        } else if (this instanceof Leather){
            this.id = Leather.class.getSimpleName()+nextId(id);
        }
        this.name = name;
        this.strength = strength;
        this.intelligent = intelligent;
        this.dexterity = dexterity;
        this.hero = hero;

    }

    public Armors(String name, Integer strength, Integer intelligent, Integer bonusDexterity, Hero hero) {
        this("", name, 10, 10, 10, null);
    }

    public Armors(String name, Report report) {
        this("", name, 10, 10, 10, null);
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public void setTaunt(String taunt) {
        this.name = taunt;
    }

    public String getTaunt() {
        return name;
    }

    public int getStrength() {
        return strength;
    }

    public int getIntelligent() {
        return intelligent;
    }

    public int getDexterity() {
        return dexterity;
    }

//
}
